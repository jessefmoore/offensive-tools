---
- name: Setup Security Tools on Linux
  hosts: all
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Update and Upgrade APT
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes
        force_apt_get: yes

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - ansible
          - netexec
          - virtualenv
          - powershell-empire
          - hydra
          - burpsuite
          - hashcat
          - nikto
          - gobuster
          - docker.io
          - git
        state: present

    - name: Create Python Virtual Environment Directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/python-env"
        state: directory
        mode: '0755'

    - name: Create Virtual Environment
      ansible.builtin.command:
        cmd: virtualenv pip
        chdir: "{{ ansible_env.HOME }}/python-env"
      args:
        creates: "{{ ansible_env.HOME }}/python-env/pip/bin/activate"

    - name: Activate Virtual Environment
      ansible.builtin.shell:
        cmd: source pip/bin/activate
        chdir: "{{ ansible_env.HOME }}/python-env"
        executable: /bin/bash

    - name: Check if CEWL Docker image exists
      ansible.builtin.command:
        cmd: docker images -q ghcr.io/digininja/cewl
      register: cewl_image_result
      changed_when: false

    - name: Pull CEWL Docker Image if not present
      ansible.builtin.command:
        cmd: docker pull ghcr.io/digininja/cewl
      when: cewl_image_result.stdout == ""

    - name: Check if Gowitness Docker image exists
      ansible.builtin.command:
        cmd: docker images -q ghcr.io/sensepost/gowitness:latest
      register: gowitness_image_result
      changed_when: false

    - name: Pull Gowitness Docker Image if not present
      ansible.builtin.command:
        cmd: docker pull ghcr.io/sensepost/gowitness:latest
      when: gowitness_image_result.stdout == ""

    - name: Check if Empire Docker image exists
      ansible.builtin.command:
        cmd: docker images -q bcsecurity/empire:latest
      register: empire_image_result
      changed_when: false

    - name: Pull Empire Docker Image if not present
      ansible.builtin.command:
        cmd: docker pull bcsecurity/empire:latest
      when: empire_image_result.stdout == ""

    - name: Clone Responder Repository into /opt
      ansible.builtin.git:
        repo: https://github.com/lgandx/Responder.git
        dest: /opt/Responder
        version: master

    - name: Download Sublime Text Repository Key
      ansible.builtin.get_url:
        url: https://download.sublimetext.com/sublimehq-pub.gpg
        dest: /tmp/sublimehq-pub.gpg
        mode: '0644'

    - name: Check if Sublime Text GPG Key exists
      ansible.builtin.stat:
        path: /etc/apt/trusted.gpg.d/sublimehq-archive.gpg
      register: sublime_gpg_key

    - name: Convert Sublime Text GPG Key to Binary Format if not present
      ansible.builtin.command:
        cmd: gpg --yes --dearmor -o /etc/apt/trusted.gpg.d/sublimehq-archive.gpg /tmp/sublimehq-pub.gpg
      when: not sublime_gpg_key.stat.exists

    - name: Check if Sublime Text Repository file exists
      ansible.builtin.stat:
        path: /etc/apt/sources.list.d/sublime-text.list
      register: sublime_repo_file

    - name: Add Sublime Text Repository if not present
      ansible.builtin.shell:
        cmd: echo "deb https://download.sublimetext.com/ apt/stable/" | tee /etc/apt/sources.list.d/sublime-text.list
        executable: /bin/bash
      when: not sublime_repo_file.stat.exists

    - name: Update APT Cache After Adding Sublime Repo
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Sublime Text
      ansible.builtin.apt:
        name: sublime-text
        state: present

    - name: Install Metasploit
      ansible.builtin.shell:
        cmd: |
          curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \\
          chmod 755 msfinstall && \\
          ./msfinstall
        chdir: "/tmp"
        creates: "/usr/bin/msfconsole"
